{"ast":null,"code":"var _jsxFileName = \"/Users/eleanorkelman/Desktop/Phase-2-React-Router/src/components/PD_FETCH.js\";\nimport React, { useState } from \"react\";\nimport EachPD from \"./EachPD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PD_FETCH(_ref) {\n  let {\n    animals,\n    setAnimals\n  } = _ref;\n  function handleDelete(id) {\n    fetch(`http://localhost:3000/animals/${id}`, {\n      method: 'DELETE'\n    }).then(resp => resp.json()).then(() => {\n      const newAnimals = animals.filter(animal => {\n        // return animal.id != id\n        if (animal.id != id) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setAnimals(newAnimals);\n    });\n  }\n  function handlePatch(id, e) {\n    e.preventDefault();\n    console.log(e.target.name.value);\n    console.log(e.target.species.value);\n    fetch(`http://localhost:3000/animals/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: e.target.name.value\n      })\n    }).then(resp => resp.json()).then(patchedAnimal => {\n      const newAnimals = animals.map(animal => {\n        if (animal.id == id) {\n          return patchedAnimal;\n        } else {\n          return animal;\n        }\n      });\n      setAnimals(newAnimals);\n    });\n  }\n  const mappedAnimals = animals.map(animal => /*#__PURE__*/_jsxDEV(EachPD, {\n    id: animal.id,\n    species: animal.species,\n    name: animal.name,\n    handlePatch: handlePatch,\n    handleDelete: handleDelete\n  }, animal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mappedAnimals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = PD_FETCH;\nexport default PD_FETCH;\nvar _c;\n$RefreshReg$(_c, \"PD_FETCH\");","map":{"version":3,"names":["React","useState","EachPD","jsxDEV","_jsxDEV","Fragment","_Fragment","PD_FETCH","_ref","animals","setAnimals","handleDelete","id","fetch","method","then","resp","json","newAnimals","filter","animal","handlePatch","e","preventDefault","console","log","target","name","value","species","headers","body","JSON","stringify","patchedAnimal","map","mappedAnimals","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/eleanorkelman/Desktop/Phase-2-React-Router/src/components/PD_FETCH.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport EachPD from \"./EachPD\";\n\nfunction PD_FETCH( { animals, setAnimals } ) {\n\n    function handleDelete(id) {\n\n        fetch(`http://localhost:3000/animals/${id}`, {\n            method: 'DELETE'\n        })\n        .then((resp) => resp.json())\n        .then(() => {\n            const newAnimals = animals.filter((animal) => {\n                // return animal.id != id\n                if (animal.id != id) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            })\n\n            setAnimals(newAnimals)\n        })\n    }\n\n    function handlePatch(id, e) {\n        e.preventDefault()\n\n        console.log(e.target.name.value)\n        console.log(e.target.species.value)\n\n        fetch(`http://localhost:3000/animals/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    name: e.target.name.value\n                }\n            )\n        })\n        .then((resp) => resp.json())\n        .then((patchedAnimal) => {\n            const newAnimals = animals.map((animal) => {\n                if (animal.id == id) {\n                    return patchedAnimal;\n                }\n                else {\n                    return animal;\n                }\n            })\n\n            setAnimals(newAnimals)\n        })\n    }\n\n    const mappedAnimals = animals.map((animal) => (\n        <EachPD\n            key = {animal.id}\n            id = {animal.id}\n            species = {animal.species}\n            name = {animal.name}\n            handlePatch = {handlePatch}\n            handleDelete = {handleDelete}\n        />\n    ))\n\n    return (\n        <>\n            <ul>\n                {mappedAnimals}\n            </ul>\n        </>\n    );\n}\n\nexport default PD_FETCH;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,QAAQA,CAAAC,IAAA,EAA4B;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAEtC,SAASG,YAAYA,CAACC,EAAE,EAAE;IAEtBC,KAAK,CAAE,iCAAgCD,EAAG,EAAC,EAAE;MACzCE,MAAM,EAAE;IACZ,CAAC,CAAC,CACDC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAC,MAAM;MACR,MAAMG,UAAU,GAAGT,OAAO,CAACU,MAAM,CAAEC,MAAM,IAAK;QAC1C;QACA,IAAIA,MAAM,CAACR,EAAE,IAAIA,EAAE,EAAE;UACjB,OAAO,IAAI;QACf,CAAC,MACI;UACD,OAAO,KAAK;QAChB;MACJ,CAAC,CAAC;MAEFF,UAAU,CAACQ,UAAU,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA,SAASG,WAAWA,CAACT,EAAE,EAAEU,CAAC,EAAE;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBC,OAAO,CAACC,GAAG,CAACH,CAAC,CAACI,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCJ,OAAO,CAACC,GAAG,CAACH,CAAC,CAACI,MAAM,CAACG,OAAO,CAACD,KAAK,CAAC;IAEnCf,KAAK,CAAE,iCAAgCD,EAAG,EAAC,EAAE;MACzCE,MAAM,EAAE,OAAO;MACfgB,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAChB;QACIN,IAAI,EAAEL,CAAC,CAACI,MAAM,CAACC,IAAI,CAACC;MACxB,CACJ;IACJ,CAAC,CAAC,CACDb,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEmB,aAAa,IAAK;MACrB,MAAMhB,UAAU,GAAGT,OAAO,CAAC0B,GAAG,CAAEf,MAAM,IAAK;QACvC,IAAIA,MAAM,CAACR,EAAE,IAAIA,EAAE,EAAE;UACjB,OAAOsB,aAAa;QACxB,CAAC,MACI;UACD,OAAOd,MAAM;QACjB;MACJ,CAAC,CAAC;MAEFV,UAAU,CAACQ,UAAU,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA,MAAMkB,aAAa,GAAG3B,OAAO,CAAC0B,GAAG,CAAEf,MAAM,iBACrChB,OAAA,CAACF,MAAM;IAEHU,EAAE,EAAIQ,MAAM,CAACR,EAAG;IAChBiB,OAAO,EAAIT,MAAM,CAACS,OAAQ;IAC1BF,IAAI,EAAIP,MAAM,CAACO,IAAK;IACpBN,WAAW,EAAIA,WAAY;IAC3BV,YAAY,EAAIA;EAAa,GALtBS,MAAM,CAACR,EAAE;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMnB,CACJ,CAAC;EAEF,oBACIpC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACIrC,OAAA;MAAAqC,QAAA,EACKL;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACP,CAAC;AAEX;AAACE,EAAA,GA1EQnC,QAAQ;AA4EjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}